"use strict";exports.id=170,exports.ids=[170],exports.modules={8170:(e,a,t)=>{t.d(a,{Vk:()=>mockDeleteAccount,Yr:()=>mockClaimDeal,dM:()=>mockExportUserData});let mockExportUserData=async()=>(await new Promise(e=>setTimeout(e,1e3)),{profile:{name:"Sarah Cohen",email:"sarah.cohen@email.com",phone:"(305) 555-0123",location:"Miami, FL",dietaryPreferences:["dairy","pareve"],favoriteCertifications:["ORB","KM"]},favorites:[{id:1,name:"Kosher Deli",addedAt:"2024-01-15"},{id:2,name:"Miami Kosher Market",addedAt:"2024-01-10"}],reviews:[{id:1,restaurantName:"Miami Kosher Market",rating:5,comment:"Great food!",date:"2024-01-12"}],activity:{restaurantsVisited:12,reviewsWritten:8,favoritesSaved:15,dealsClaimed:5},exportDate:new Date().toISOString()}),mockDeleteAccount=async e=>{if(await new Promise(e=>setTimeout(e,2e3)),"password123"!==e)throw Error("Invalid password");return Promise.resolve()},mockClaimDeal=async e=>{if(await new Promise(e=>setTimeout(e,1500)),!(Math.random()>.1))throw Error("Failed to claim deal. Please try again.");return{success:!0,dealId:e,claimedAt:new Date().toISOString(),message:"Deal claimed successfully!"}}}};